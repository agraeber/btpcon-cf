[
    {
        "kind": 1,
        "language": "markdown",
        "value": "<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <style>\n    #banner-wrapper {\n      background: url(https://www.btpcon.org/wp-content/themes/exhibz/assets/images/banner/about-banner.jpg);\n      height: 200px;\n      width: 100%;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 1rem;\n    }\n    #banner-title {\n      font-size: 48px;\n      font-weight: 800;\n      color: #fff;\n    }\n    #banner-image {\n      height: 75%;\n      margin-bottom: 1rem;\n      margin-right: 2rem;\n    }\n  </style>\n</head>\n<body>\n\n  <div id=\"banner-wrapper\">\n    <span id=\"banner-title\">BTPcon 2023</span>\n    <img id=\"banner-image\" src=\"https://www.cloudfoundry.org/wp-content/uploads/2017/01/CloudFoundaryCorp_vertical_white.png\" />\n  </div>\n\n</body>\n</html>",
        "outputs": [
            {
                "mime": "text/html",
                "value": "<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n<style>\n.alert {\n  padding: 20px;\n  color: var(--theme-error-foreground);\n  background-color: var(--theme-error-background);\n  max-width: 70em;\n  width: 95%;\n}\n.alert.info {\n  color: var(--theme-info-foreground);\n  background-color: var(--theme-info-background);\n}\n.alert.warning {\n  color: var(--theme-warning-foreground);\n  background-color: var(--theme-warning-background);\n}\n.closebtn {\n  margin-left: 15px;\n  color: white;\n  font-weight: bold;\n  float: right;\n  font-size: 22px;\n  line-height: 20px;\n  cursor: pointer;\n  transition: 0.3s;\n}\n.closebtn:hover {\n  color: black;\n}\n</style>\n</head>\n<h1 style=\"font-size:50px\">CAP Notebook&emsp;<img style=\"vertical-align:middle\" src=\"https://cap.cloud.sap/docs/assets/logos/sap.svg\" alt=\"drawing\" width=\"70\"/><img style=\"vertical-align:middle\" src=\"https://cap.cloud.sap/docs/assets/logos/cap.svg\" alt=\"drawing\" width=\"60\"/></h1>\n<body>\n<div class=\"alert info\">\n  <span class=\"closebtn\" onclick=\"this.parentElement.style.display='none';\">&times;</span>\n  <strong>Info:</strong> Notebook code cells work just like your native environments. However, predefined *Magic commands* exist\n  to make notebook workflows even simpler.\n  They all start with <code>%</code> or <code>%%</code> for line or cell magic commands. Type <code>%quickref</code> in any cell for a full list.\n</div>\n<p>\n<div class=\"alert\">\n  <span class=\"closebtn\" onclick=\"this.parentElement.style.display='none';\">&times;</span>\n  <strong>Attention:</strong> The cell types <i>Shell Script</i> and <i>Terminal</i> are executed in your native shell environment. Check the code <b>before</b> running the cell.\n</div>\n<p>\n</body>\n</html>"
            }
        ]
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "# From Your First App Deployment to CI/CD with Cloud Foundry\n\nHow does Cloud Foundry actually work? <br>\nIn this talk we will explore the structure of apps and services on the SAP BTP, Cloud Foundry environment and learn how to administer them. We will start with the simple deployment of an app, then increase the complexity step by step and finally set up a CI/CD pipeline. Suitable for developers and technically interested people.",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "## Simple App Deployment",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/index.html\"\nHello BTPcon!",
        "outputs": [
            {
                "mime": "text/html",
                "value": "Wrote cell content to file <a href=\"my-first-app/index.html\">my-first-app/index.html</a>.\n"
            }
        ]
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/manifest.yaml\"\n---\napplications:\n- name: btpcon-cf-static\n  random-route: true\n  path: .\n  memory: 256M\n  disk_quota: 256M\n  buildpacks:\n  - https://github.com/cloudfoundry/staticfile-buildpack",
        "outputs": [
            {
                "mime": "text/html",
                "value": "Wrote cell content to file <a href=\"html5/manifest.yaml\">html5/manifest.yaml</a>.\n"
            }
        ]
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "cf login -a https://api.cf.us10-001.hana.ondemand.com",
        "outputs": [
            {
                "mime": "text/html",
                "value": "Running in terminal <b>presentation.capnb - /Users/i533499/github/nicoschoenteich/btpcon-cf5</b>"
            }
        ]
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "cd html5 && cf push",
        "outputs": [
            {
                "mime": "text/html",
                "value": "Running in terminal <b>presentation.capnb - /Users/i533499/github/nicoschoenteich/btpcon-cf6</b>"
            }
        ]
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "![SAP BTP Cockpit](images/btp-static.png)\n![Webapp](images/static-webapp.png)",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "## How Cloud Foundry Stages Apps",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "- CF is an open source application development platform as a service (PaaS)\n- It focuses on developer experience ➡️ developers can focus on developing solutions instead of how to run those solutions\n- \"Here is my code, just run it\"\n- Polyglot environment (running multiple programming languages)\n\nA ***simplified*** flow of how apps are staged:\n\n```text\n┌───────────────────────────────────────┐\n│              ┌─────────┐              │\n│              │ cf CLI  │              │\n│              └─────────┘              │\n│                                       │\n│  > command line tool for developers   │\n│                                       │\n└───────────────────────────────────────┘\n\n                   ⬇️\n\n┌───────────────────────────────────────┐\n│          ┌───────────────────┐        │\n│          │ Cloud Controller  │        │\n│          └───────────────────┘        │\n│                                       │\n│  > maintains database with            │\n│    orgs, spaces, services, roles, ... │\n│                                       │\n└───────────────────────────────────────┘\n\n                   ⬇️              \n\n┌───────────────────────────────────────┐\n│              ┌─────────┐              │\n│              │  Diego  │              │\n│              └─────────┘              │\n│                                       │\n│  > self-healing container management  │\n│    system                             │\n│                                       │\n└───────────────────────────────────────┘\n```\n\n1. cf CLI sends request to Cloud Controller\n1. Cloud Controller passes requests to run apps to the Diego\n1. Auctioneer (Diego) finds available Diego Cell\n1. Executor (Diego) creates Garden container in the Diego Cell\n1. Route is being created\n1. Logging",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "## Apps vs. Services",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "### Apps\n\n- Are deployed into a Cloud Foundry space\n- Consume Cloud Foundry Runtime ($$$)\n- Can be scaled vertically and horizontally\n- Many different programming languages possible (polyglot environment)\n- Multi-tenancy is possible, which allows to expose them via the Cloud Foundry Marketplace so they can be subscribed to by other subaccounts\n\n### Services\n\n- Services are also available via the Cloud Foundry Marketplace\n- Most commonly used: Destination Service, Authorization and Trust Management Service, ...\n- To use a service means to create an instance of a service\n- Service instances also live in a Cloud Foundry space\n\n### Application Bindings\n\n- An app can be bound to a service instance by storing the service instance credentials in the app's environment variables",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "## Multi-Target Applications",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "![MTA architecture](images/architecture.png)",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "### HTML5 App",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/package.json\"\n{\n    \"name\": \"btpcon-cf-html5\",\n    \"dependencies\": {\n        \"@sap/html5-app-deployer\": \"2.0.1\"\n    },\n    \"scripts\": {\n        \"start\": \"node node_modules/@sap/html5-app-deployer/index.js\",\n        \"dev\": \"vite\",\n        \"build\": \"vite build --outDir=resources/dist\"\n    },\n    \"devDependencies\": {\n        \"vite\": \"^4.2.1\"\n    }\n}",
        "outputs": [
            {
                "mime": "text/html",
                "value": "Wrote cell content to file <a href=\"html5/package.json\">html5/package.json</a>.\n"
            }
        ]
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/public/manifest.json\"\n{\n\t\"_version\": \"1.12.0\",\n\t\"sap.app\": {\n\t\t\"id\": \"btpcon-cf-html5\",\n\t\t\"type\": \"application\",\n\t\t\"applicationVersion\": {\n\t\t\t\"version\": \"1.0.0\"\n\t\t}\n\t},\n\t\"sap.cloud\": {\n\t\t\"service\": \"basic.service\"\n\t}\n}",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/public/xs-app.json\"\n{\n    \"welcomeFile\": \"/index.html\",\n    \"authenticationMethod\": \"route\",\n    \"routes\": [\n        {\n            \"source\": \"^(.*)$\",\n            \"target\": \"$1\",\n            \"service\": \"html5-apps-repo-rt\",\n            \"authenticationType\": \"none\"\n        }\n    ]\n}",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "### Approuter",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"approuter/package.json\"\n{\n\t\"name\": \"btpcon-cf-approuter\",\n\t\"dependencies\": {\n\t\t\"@sap/approuter\": \"latest\"\n\t},\n\t\"scripts\": {\n\t\t\"start\": \"node node_modules/@sap/approuter/approuter.js\"\n\t}\n}",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"approuter/xs-app.json\"\n{\n\t\"welcomeFile\": \"index.html\",\n\t\"authenticationMethod\": \"route\",\n\t\"routes\": [\n\t\t{\n            \"source\": \"^(.*)$\",\n            \"target\": \"/btpconcfhtml5/$1\",\n            \"service\": \"html5-apps-repo-rt\"\n        }\n\t]\n}",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "### Building and Deploying the MTA",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"mta.yaml\"\nID: btpcon-cf\n_schema-version: 3.2.0\nversion: 1.0.0\nparameters:\n  enable-parallel-deployments: true\nmodules:\n  - name: btpcon-cf-html5\n    type: nodejs\n    path: html5\n    parameters:\n      no-route: true\n    build-parameters:\n      builder: custom\n      commands:\n        - npm install\n        - npm run build\n    requires:\n      - name: btpcon-cf-html5-host\n  - name: btpcon-cf-approuter\n    type: nodejs\n    path: approuter\n    parameters:\n      disk-quota: 256M\n      memory: 256M\n    requires:\n      - name: btpcon-cf-html5-runtime\n      - name: btpcon-cf-html5-destination\n      - name: btpcon-cf-html5-uaa\nresources:\n  - name: btpcon-cf-html5-host\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service: html5-apps-repo\n      service-plan: app-host\n  - name: btpcon-cf-html5-runtime\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service: html5-apps-repo\n      service-plan: app-runtime\n  - name: btpcon-cf-html5-destination\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service-plan: lite\n      service: destination\n      path: ./destinations.json\n  - name: btpcon-cf-html5-uaa\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service: xsuaa\n      service-plan: application\n      path: xs-security.json",
        "outputs": [
            {
                "mime": "text/html",
                "value": "Wrote cell content to file <a href=\"mta.yaml\">mta.yaml</a>.\n"
            }
        ]
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "mbt build",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "cf deploy mta_archives/btpcon-cf_1.0.0.mtar",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "![SAP BTP Cockpit](images/btp-mta.png)\n![Webapp](images/mta-webapp.png)",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "### Adding Destination and Authorization Instances",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"mta.yaml\"\nID: btpcon-cf\n_schema-version: 3.2.0\nversion: 1.0.0\nparameters:\n  enable-parallel-deployments: true\nmodules:\n  - name: btpcon-cf-html5\n    type: nodejs\n    path: html5\n    parameters:\n      no-route: true\n      disk-quota: 256M\n      memory: 256M\n    build-parameters:\n      builder: custom\n      commands:\n        - npm run build\n    requires:\n      - name: btpcon-cf-html5-host\n  - name: btpcon-cf-approuter\n    type: nodejs\n    path: approuter\n    parameters:\n      disk-quota: 256M\n      memory: 256M\n    requires:\n      - name: btpcon-cf-html5-runtime\n      - name: btpcon-cf-html5-destination\n      - name: btpcon-cf-html5-uaa\nresources:\n  - name: btpcon-cf-html5-host\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service: html5-apps-repo\n      service-plan: app-host\n  - name: btpcon-cf-html5-runtime\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service: html5-apps-repo\n      service-plan: app-runtime\n  - name: btpcon-cf-html5-destination\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service-plan: lite\n      service: destination\n      path: destinations.json\n  - name: btpcon-cf-html5-uaa\n    type: org.cloudfoundry.managed-service\n    parameters:\n      service: xsuaa\n      service-plan: application\n      config:\n        path: xs-security.json",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"destinations.json\"\n{\n\t\"init_data\": {\n\t\t\"instance\": {\n\t\t\t\"existing_destinations_policy\": \"update\",\n\t\t\t\"destinations\": [\n\t\t\t\t{\n\t\t\t\t\t\"Name\": \"github-api\",\n\t\t\t\t\t\"Authentication\": \"NoAuthentication\",\n\t\t\t\t\t\"ProxyType\": \"Internet\",\n\t\t\t\t\t\"Type\": \"HTTP\",\n\t\t\t\t\t\"URL\": \"https://api.github.com\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n}",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"xs-security.json\"\n{\n    \"xsappname\": \"btpcon-cf-uaa\",\n    \"tenant-mode\": \"dedicated\",\n    \"oauth2-configuration\": {\n        \"redirect-uris\": [\n            \"https://*btpcon-cf-approuter.cfapps.us10-001.hana.ondemand.com/login/callback\"\n        ]\n    }\n}",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"xs-app.json\"\n{\n\t\"welcomeFile\": \"index.html\",\n\t\"authenticationMethod\": \"route\",\n\t\"routes\": [\n\t\t{\n\t\t\t\"source\": \"^/user-api(.*)\",\n\t\t\t\"target\": \"$1\",\n\t\t\t\"service\": \"sap-approuter-userapi\"\n\t\t},\n\t\t{\n\t\t\t\"source\": \"^.*/github-api/(.*)$\",\n\t\t\t\"target\": \"$1\",\n\t\t\t\"authenticationType\": \"none\",\n\t\t\t\"destination\": \"github-api\"\n\t\t},\n\t\t{\n            \"source\": \"^(.*)$\",\n            \"target\": \"/btpconcfhtml5/$1\",\n            \"service\": \"html5-apps-repo-rt\"\n        }\n\t]\n}",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/public/xs-app.json\"\n{\n    \"welcomeFile\": \"/index.html\",\n    \"authenticationMethod\": \"route\",\n    \"routes\": [\n        {\n            \"source\": \"^(.*)$\",\n            \"target\": \"$1\",\n            \"service\": \"html5-apps-repo-rt\",\n            \"authenticationType\": \"xsuaa\"\n        }\n    ]\n}",
        "outputs": []
    },
    {
        "kind": 2,
        "language": "terminal",
        "value": "%%writefile \"html5/index.html\"\n<h1>Hello BTPcon!</h1>\n\n<p>Why not check out one of these SAP CodeJam repositories?</p>\n\n<ul class=\"bind-list\" data-bind=\"repos>repos\">\n    <li>\n        <a class=\"bind-prop\" data-bind=\"repos>html_url\"></a>\n    </li>\n</ul>\n\n<script type=\"module\">\n    import { createModel } from \"vanilla-data-binding\"\n\n    const main = async () => {\n        const response = await fetch(\"/github-api/orgs/SAP-Samples/repos?sort=updated&per_page=100\")\n        const result = await response.json()\n        const repos = result.filter(repo => repo.name.includes(\"codejam\"))\n        createModel(\"repos\", { \"repos\": repos })\n    }\n    main()\n    const user = async () => {\n        const response = await fetch(\"/user-api/currentUser\")\n        const result = await response.json()\n        document.getElementsByTagName(\"h1\")[0].textContent = `Hello ${result.firstname}!`\n    }\n    user()\n</script>",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "## Continous Integration and Delivery",
        "outputs": []
    },
    {
        "kind": 1,
        "language": "markdown",
        "value": "![CICD service on CF](images/cicd-service.png)\n\n```text\n┌───────────────────────────────────────┐\n│            ┌────────────┐             │\n│            │  git push  │             │\n│            └────────────┘             │\n│                                       │\n│  > developer pushes commit to git     │\n│                                       │\n└───────────────────────────────────────┘\n\n                   ⬇️\n\n┌───────────────────────────────────────┐\n│          ┌───────────────────┐        │\n│          │  GitHub Webhook   │        │\n│          └───────────────────┘        │\n│                                       │\n│  > gets triggered on git push         │\n│    (depending on config)              │\n│                                       │\n└───────────────────────────────────────┘\n\n                  POST\n                   ⬇️              \n\n┌───────────────────────────────────────┐\n│          ┌───────────────────┐        │\n│          │   CI/CD Service   │        │\n│          └───────────────────┘        │\n│                                       │\n│  > pulls repo, then builds, tests,    │\n│    and releases the project           │\n│                                       │\n└───────────────────────────────────────┘\n\n               deployment\n                   ⬇️               \n\n┌───────────────────────────────────────┐\n│            ┌────────────┐             │\n│            │  CF space  │             │\n│            └────────────┘             │\n│                                       │\n│  > app started and available          │\n│                                       │\n└───────────────────────────────────────┘\n```",
        "outputs": []
    }
]